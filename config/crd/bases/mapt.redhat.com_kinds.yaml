---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: kinds.mapt.redhat.com
spec:
  group: mapt.redhat.com
  names:
    kind: Kind
    listKind: KindList
    plural: kinds
    singular: kind
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Kind is the Schema for the kinds API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KindSpec defines the desired state of Kind.
            properties:
              cloudConfig:
                description: CloudConfig holds cloud provider and credential configurations.
                properties:
                  credentialsSecretRef:
                    description: |-
                      CredentialsSecretRef is a reference to a Kubernetes Secret in the same namespace
                      as the KindSpot resource. This Secret must contain all necessary cloud provider
                      credentials and configurations, including the region.
                      The required keys within the Secret depend on the specified 'Provider'.
                      For 'AWS', this Secret is expected to contain:
                        - "access-key": Your AWS access key ID.
                        - "secret-key": Your AWS secret access key.
                        - "region": The AWS region (e.g., "us-east-1").
                        - "bucket": The S3 bucket name (for the provisioning tool's backend state, if applicable).
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  provider:
                    default: AWS
                    description: |-
                      Provider specifies the cloud provider name.
                      Currently, only "AWS" is supported. This field is designed for future extension.
                    enum:
                    - AWS
                    type: string
                required:
                - credentialsSecretRef
                - provider
                type: object
              kindClusterConfig:
                description: KindClusterConfig defines the configuration for the Kind
                  cluster itself.
                properties:
                  kubernetesVersion:
                    description: |-
                      KubernetesVersion specifies the Kubernetes version for the Kind cluster (e.g., "v1.29.2").
                      This field is required.
                    minLength: 1
                    type: string
                required:
                - kubernetesVersion
                type: object
              machineConfig:
                description: MachineConfig defines the configuration for the EC2 spot
                  machine.
                properties:
                  architecture:
                    default: x86_64
                    description: Architecture for the EC2 instance.
                    enum:
                    - x86_64
                    - arm64
                    type: string
                  cpus:
                    description: CPUs is the number of vCPUs for the EC2 instance.
                    format: int32
                    type: integer
                  gpu:
                    default: false
                    description: |-
                      Indicates if the EC2 instance should have GPU support.
                      In case GPU is true, the instance type will be selected from the list of supported GPU instances.
                    type: boolean
                  memoryGiB:
                    description: MemoryGiB is the amount of RAM for the EC2 instance
                      in GiB.
                    format: int32
                    type: integer
                  nestedVirtualizationEnabled:
                    default: false
                    description: NestedVirtualizationEnabled specifies if the EC2
                      instance should have nested virtualization support.
                    type: boolean
                  spotPriceIncreasePercentage:
                    description: |-
                      SpotPriceIncreasePercentage is the percentage to add on top of the current calculated spot price
                      to increase the chances of acquiring the machine. Only applies if UseSpotInstances is true.
                      A nil value means the underlying provisioning tool's default (if any) will be used, or the relevant command-line flag will be omitted. '0' is a valid percentage.
                      Corresponds to the Tekton 'spot-increase-rate' param (default '20').
                    type: integer
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      Tags to apply to the AWS resources created by the provisioning tool.
                      The operator will convert this map into the string format the tool expects (e.g., "key1=value1,key2=value2").
                      Corresponds to the Tekton 'tags' param.
                    type: object
                  useSpotInstances:
                    default: true
                    description: |-
                      UseSpotInstances specifies whether to use EC2 spot instances.
                      Corresponds to the Tekton 'spot' param.
                    type: boolean
                type: object
              outputKubeconfigSecretName:
                description: |-
                  OutputKubeconfigSecretName defines the prefix for the name of the Kubernetes Secret
                  that will store the kubeconfig for the provisioned Kind cluster.
                  If not provided, a default prefix will be used (e.g., "kindspot-<random>-kubeconfig").
                  The final name is generated using this prefix via Kubernetes' `generateName`.
                  This also corresponds to the Tekton 'cluster-access-secret-name' param.
                type: string
              terminationPolicy:
                description: TerminationPolicy defines when and how the cluster should
                  be terminated.
                properties:
                  deleteAfterSeconds:
                    description: |-
                      DeleteAfterSeconds specifies a Time-To-Live (TTL) for the provisioned KindSpot.
                      After this duration (in seconds, starting from when the cluster becomes Ready or from creation),
                      the KindSpot and its underlying resources will be automatically destroyed.
                      This corresponds to the provisioning tool's '--timeout' parameter, which often expects a Go duration string.
                      The operator will convert these seconds into the required Go duration format for the tool.
                    format: int64
                    minimum: 60
                    type: integer
                type: object
            required:
            - cloudConfig
            - kindClusterConfig
            - machineConfig
            type: object
          status:
            description: KindStatus defines the observed state of Kind.
            properties:
              averagePrice:
                description: |-
                  AveragePrice reports the average acquisition price of the spot instance(s).
                  This field is a string to allow for currency.
                type: string
              awsInstanceID:
                description: AWSInstanceID is the ID of the EC2 instance provisioned
                  with a Kind Cluster.
                type: string
              clusterReady:
                description: ClusterReady indicates if the Kind cluster is fully provisioned
                  and accessible.
                type: boolean
              conditions:
                description: Conditions represent the latest available observations
                  of the Kind cluster state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              expirationTimestamp:
                description: ExpirationTimestamp indicates when the cluster is scheduled
                  to be terminated, based on TerminationPolicy.
                format: date-time
                type: string
              kindVersion:
                description: KindVersion is the actual Kubernetes version of the provisioned
                  Kind cluster.
                type: string
              kubeconfigSecretName:
                description: |-
                  KubeconfigSecretName is the name of the Kubernetes Secret where the cluster's
                  kubeconfig has been stored. This will match `spec.outputKubeconfigSecretName` if provided,
                  or be a generated name.
                type: string
              message:
                description: Message provides a human-readable status message.
                type: string
              phase:
                description: |-
                  Phase indicates the current lifecycle phase of the Kind cluster.
                  E.g., Pending, Provisioning, Ready, Deleting, Error.
                type: string
              provisionId:
                description: ProvisionId is the id of the backend used by the Kind
                  provisioning tool.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
